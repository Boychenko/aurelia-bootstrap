"bundle";!function(){var a=System.amdDefine;a("accordion/accordion.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><div class="container-fluid"><div class="page-header"><a class="btn btn-default pull-right" target="_blank" href="https://github.com/tochoromero/aurelia-bootstrap/tree/master/doc/src/accordion"><i class="fa fa-edit"></i> Improve documentation</a><h1>Accordion</h1></div><div class="row"><div class="col-sm-6 col-xs-12"><p><a class="btn btn-default" aubs-btn-checkbox="state.bind: closeOthers">Close Others</a> <a class="btn btn-default" aubs-btn-checkbox="state.bind: firstTabState">Toggle First</a> <a class="btn btn-default" aubs-btn-checkbox="state.bind: secondDisabled">Disable Second</a></p><aubs-accordion close-others.bind="closeOthers"><aubs-accordion-group title="Collapsible Group Item #1" is-open.bind="firstTabState">Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them accusamus labore sustainable VHS.</aubs-accordion-group><aubs-accordion-group title="Collapsible Group Item #2" disabled.bind="secondDisabled">You can disable the panel header preventing the item to be manually toggled.</aubs-accordion-group><aubs-accordion-group title="Markup Title <i class=\'fa fa-heart\'></i>">You can use html markup in the Acoordion group title.</aubs-accordion-group><aubs-accordion-group title="With Panel Class" panel-class="panel-danger">You can specify the class for the panel in the accordion group.</aubs-accordion-group></aubs-accordion></div><div class="col-sm-6 col-xs-12"><p>The <code>aubs-accordion</code> and <code>aubs-accordion-group</code> custom elements allow you to easily organize your content in panels that collapse and expand with a click.</p><h3>aubs-accordion</h3><p>This custom element is a wrapper for all of the accordion groups. It has a single setting:</p><ul><li><code>close-others</code><boolean></boolean><i>(default: true)</i>: Boolean that determines whether or not we should close all the other items when one is opened.</li></ul><h3>aubs-accordion-group</h3><p>Represents one item in the accordion, it must be a direct descendant of <code>aubs-accordion</code>. The inner html of the Custom Element will be transcluded into the collapsable section of the panel. Its properties are:</p><ul><li><code>title</code><string></string><i>(required)</i>: This String will be the clickable text for the panel header. You can provided html markup.</li><li><code>panel-class</code><string></string><i>(default: panel-default)</i>: This is the css class for the panel. It needs to be a Bootstrap panel class.<br><strong>Note:</strong> In bootstrap 4 mode this property is ignored.</li><li><code>is-open</code><property></property><boolean property.bind="true"></boolean><two-way></two-way><i>(default: false)</i>: Reflects the state of the item. You can use this property to programmatically toggle one item.</li><li><code>disabled</code><boolean></boolean><i>(default: false)</i>: Boolean that determines if the item is disabled. A disabled item cannot be manually toggled, but it can still be programmatically toggled.</li></ul></div><div class="col-xs-12"><hr><aubs-tabset><aubs-tab header="HTML"><pre><code class="language-markup" au-syntax>&lt;template>\n    &lt;p>\n        &lt;a class="btn btn-default" aubs-btn-checkbox="state.bind: closeOthers">Close Others&lt;/a>\n        &lt;a class="btn btn-default" aubs-btn-checkbox="state.bind: firstTabState">Toggle First&lt;/a>\n        &lt;a class="btn btn-default" aubs-btn-checkbox="state.bind: secondDisabled">Disable Second&lt;/a>\n    &lt;/p>\n\n\n    &lt;aubs-accordion close-others.bind="closeOthers">\n        &lt;aubs-accordion-group title="Collapsible Group Item #1" is-open.bind="firstTabState">\n            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\n            aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\n            sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh\n            helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo.\n            Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven\'t heard of them\n            accusamus labore sustainable VHS.\n        &lt;/aubs-accordion-group>\n\n        &lt;aubs-accordion-group title="Collapsible Group Item #2" disabled.bind="secondDisabled">\n            You can disable the panel header preventing the item to be manually toggled.\n        &lt;/aubs-accordion-group>\n\n        &lt;aubs-accordion-group title="Markup Title &lt;i class=\'fa fa-heart\'>&lt;/i>">\n            You can use html markup in the Acoordion group title.\n        &lt;/aubs-accordion-group>\n\n        &lt;aubs-accordion-group title="With Panel Class" panel-class="panel-danger">\n            You can specify the class for the panel in the accordion group.\n        &lt;/aubs-accordion-group>\n    &lt;/aubs-accordion>\n&lt;/template></code></pre></aubs-tab><aubs-tab header="JS"><pre><code class="language-js" au-syntax>export class Example {\n    firstTabState = true;\n    closeOthers = true;\n}</code></pre></aubs-tab></aubs-tabset></div></div></div></template>'})}(),System.register("accordion/accordion.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("Accordion",d=function a(){c(this,a),this.closeOthers=!0}),a("Accordion",d)}}}),function(){var a=System.amdDefine;a("app.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><require from="nav-bar.html"></require><require from="bootstrap/css/bootstrap.css"></require><nav-bar router.bind="router"></nav-bar><div class="page-host"><router-view></router-view><div class="container-fluid"><div class="text-center"><hr><p>Hector Romero, 2016 under the MIT License</p></div></div></div></template>'})}(),System.register("app.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("App",d=function(){function a(){c(this,a)}return a.prototype.configureRouter=function(a,b){a.title="Aurelia Bootstrap",a.map([{route:["","introduction"],name:"introduction",moduleId:"introduction/introduction",nav:!1},{route:["accordion"],name:"accordion",moduleId:"accordion/accordion",nav:!0,title:"Accordion"},{route:["buttons"],name:"buttons",moduleId:"buttons/buttons",nav:!0,title:"Buttons"},{route:["dropdown"],name:"dropdown",moduleId:"dropdown/dropdown",nav:!0,title:"Dropdown"},{route:["popover"],name:"popover",moduleId:"popover/popover",nav:!0,title:"Popover"},{route:["tabs"],name:"tabs",moduleId:"tabs/tabs",nav:!0,title:"Tabs"},{route:["tooltip"],name:"tooltip",moduleId:"tooltip/tooltip",nav:!0,title:"Tooltip"}]),this.router=b},a}()),a("App",d)}}}),function(){var a=System.amdDefine;a("buttons/buttons.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><div class="container-fluid"><div class="page-header"><a class="btn btn-default pull-right" target="_blank" href="https://github.com/tochoromero/aurelia-bootstrap/tree/master/doc/src/buttons"><i class="fa fa-edit"></i> Improve documentation</a><h1>Buttons</h1></div><div class="row"><div class="col-sm-6 col-xs-12"><h3>Single Toggle</h3><pre>Checked: ${singleToggle.value}</pre><a class="btn btn-success" aubs-btn-checkbox="state.bind: singleToggle; checked-value.bind: myChecked; unchecked-value.bind: myUnchecked">Single Toggle</a><h3>Checkbox</h3><pre>Values: {left: ${checkboxValues.left}, middle: ${checkboxValues.middle}, right: ${checkboxValues.right}}</pre><div class="btn-group"><a class="btn btn-warning" aubs-btn-checkbox="state.bind: checkboxValues.left">Left</a> <a class="btn btn-warning" aubs-btn-checkbox="state.bind: checkboxValues.middle;">Middle</a> <a class="btn btn-warning" aubs-btn-checkbox="state.bind: checkboxValues.right">Right</a></div><h3>Radio Button</h3><pre>Selection: ${radioSelection}</pre><div class="btn-group"><a class="btn btn-default" aubs-btn-radio="model.bind: radioSelection; value: left">Left</a> <a class="btn btn-default ${disabled ? \'disabled\' : \'\'}" aubs-btn-radio="model.bind: radioSelection; value: middle">Middle</a> <a class="btn btn-default" aubs-btn-radio="model.bind: radioSelection; value: right">Right</a></div><div class="checkbox"><label><input type="checkbox" checked.bind="disabled"> Disable Middle</label></div><h3>Loading Button</h3><a class="btn btn-default" click.delegate="ajaxCall()" aubs-btn-loading="loading.bind: isLoading; text: <i class=\'fa fa-refresh fa-spin\'></i> Loading...">Ajax Call</a></div><div class="col-sm-6 col-xs-12"><p>We provide a couple of custom attributes to enhance buttons. Any of this custom attributes can be used with either the <code>a</code> or <code>button</code> tags.</p><h3>aubs-btn-checkbox</h3><p>This custom attribute allow you to use buttons instead of checkboxes. Buttons with this custom attribute behave like toggle buttons. One of the advantages over normal checkboxes is that you can use any object as the checked and unchecked values.</p><ul><li><code>state</code><property></property><i>(default: <code>unchecked-value</code>)</i>: This field holds the state of your button. The button will toggle between <code>checked-value</code> and <code>unchecked-value</code>.</li><li><code>checked-value</code><any></any>(default: true): Represents the checked value of your button.</li><li><code>unchecked-value</code><any></any>(default: false): Represents the unchecked value of your button.</li></ul><h3>aubs-btn-radio</h3><p>This custom attribute allows you to use buttons instead of radio buttons. Buttons will behave like toggle buttons and again you can use any object as the value for your radios.</p><ul><li><code>model</code><property></property>: Holds the selected value in your radio group. All the <code>aubs-btn-radio</code> buttons that bind to the same property belong to the same radio group.</li><li><code>value</code><any></any>: The value for the radio button.</li></ul><h3>aubs-btn-loading</h3><p>Use this custom attribute to change your buttons into a loading state. On this state they are disabled and display a message.</p><ul><li><code>loading</code><boolean></boolean>: Allows you control the loading state of the button. If <code>true</code> the button inner html will be changed to the value of the provided <code>text</code>.</li><li><code>text</code><string></string><markup></markup><i>(default: Loading...)</i>: The text to use when the button is on a loading state.</li></ul></div><div class="col-xs-12"><hr><aubs-tabset><aubs-tab header="HTML"><pre><code class="language-markup" au-syntax>&lt;template>\n    &lt;h3>Single Toggle&lt;/h3>\n    &lt;pre>Checked: ${open}singleToggle.value}&lt;/pre>\n    &lt;a class="btn btn-success"\n       aubs-btn-checkbox="state.bind: singleToggle; checked-value.bind: myChecked; unchecked-value.bind: myUnchecked">\n        Single Toggle\n    &lt;/a>\n\n    &lt;h3>Checkbox&lt;/h3>\n    &lt;pre>Values: {left: ${open}checkboxValues.left}, middle: ${open}checkboxValues.middle}, right: ${open}checkboxValues.right}}&lt;/pre>\n    &lt;div class="btn-group">\n        &lt;a class="btn btn-warning" aubs-btn-checkbox="state.bind: checkboxValues.left">Left&lt;/a>\n        &lt;a class="btn btn-warning" aubs-btn-checkbox="state.bind: checkboxValues.middle;">Middle&lt;/a>\n        &lt;a class="btn btn-warning" aubs-btn-checkbox="state.bind: checkboxValues.right">Right&lt;/a>\n    &lt;/div>\n\n    &lt;h3>Radio Button&lt;/h3>\n    &lt;pre>Selection: ${open}radioSelection}&lt;/pre>\n    &lt;div class="btn-group">\n        &lt;a class="btn btn-default" aubs-btn-radio="model.bind: radioSelection; value: left">Left&lt;/a>\n        &lt;a class="btn btn-default ${open}disabled ? \'disabled\' : \'\'}"\n           aubs-btn-radio="model.bind: radioSelection; value: middle">Middle&lt;/a>\n        &lt;a class="btn btn-default" aubs-btn-radio="model.bind: radioSelection; value: right">Right&lt;/a>\n    &lt;/div>\n    &lt;div class="checkbox">\n        &lt;label> &lt;input type="checkbox" checked.bind="disabled"> Disable Middle &lt;/label>\n    &lt;/div>\n\n    &lt;h3>Loading Button&lt;/h3>\n    &lt;a class="btn btn-default" click.delegate="ajaxCall()"\n       aubs-btn-loading="loading.bind: isLoading; text: &lt;i class=\'fa fa-refresh fa-spin\'>&lt;/i> Loading...">\n        Ajax Call\n    &lt;/a>\n&lt;/template></code></pre></aubs-tab><aubs-tab header="JS"><pre><code class="language-js" au-syntax>export class Example {\n\n    myChecked = {\n        value: 1\n    };\n\n    myUnchecked = {\n        value: 0\n    };\n\n    singleToggle = this.myChecked;\n\n    checkboxValues = {\n        left: true,\n        middle: false,\n        right: false\n    };\n\n    radioSelection = \'middle\';\n\n    disabled = true;\n\n    isLoading = false;\n\n    clicked(){\n        alert(\'Button Clicked!!\');\n    }\n\n    ajaxCall() {\n        console.log(\'clicked\');\n        this.isLoading = true;\n        setTimeout(() => {\n            this.isLoading = false\n        }, 3000);\n    }\n}</code></pre></aubs-tab></aubs-tabset></div></div></div></template>'})}(),System.register("buttons/buttons.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("Buttons",d=function(){function a(){c(this,a),this.open="${",this.myChecked={value:1},this.myUnchecked={value:0},this.singleToggle=this.myChecked,this.checkboxValues={left:!0,middle:!1,right:!1},this.radioSelection="middle",this.disabled=!0,this.isLoading=!1}return a.prototype.clicked=function(){alert("Button Clicked!!")},a.prototype.ajaxCall=function(){var a=this;console.log("clicked"),this.isLoading=!0,setTimeout(function(){a.isLoading=!1},3e3)},a}()),a("Buttons",d)}}}),function(){var a=System.amdDefine;a("dropdown/dropdown.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><div class="container-fluid"><div class="page-header"><a class="btn btn-default pull-right" target="_blank" href="https://github.com/tochoromero/aurelia-bootstrap/tree/master/doc/src/dropdown"><i class="fa fa-edit"></i> Improve documentation</a><h1>Dropdown</h1></div><div class="row"><div class="col-sm-6 col-xs-12"><div class="btn-group"><a class="btn btn-default" aubs-btn-radio="model.bind: autoClose; value: always">Always</a> <a class="btn btn-default" aubs-btn-radio="model.bind: autoClose; value: outside">Outside</a> <a class="btn btn-default" aubs-btn-radio="model.bind: autoClose; value: disabled">Disabled</a></div><br><br><div class="btn-group dropdown" aubs-dropdown="auto-close.bind: autoClose; on-toggle.call: toggled(state)"><button class="btn btn-primary dropdown-toggle" aubs-dropdown-toggle>Dropdown trigger <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-left"><li><a class="dropdown-item" href="javascript:void(0)">First Action</a></li><li><a class="dropdown-item" href="javascript:void(0)">Second Action</a></li><li><a class="dropdown-item" href="javascript:void(0)">Third Action</a></li><li class="divider"></li><li><a class="dropdown-item" href="javascript:void(0)">Separated Action</a></li></ul></div></div><div class="col-sm-6 col-xs-12"><p>The <code>aubs-dropdown</code> and <code>aubs-dropdown-toggle</code> custom attributes allow you to easily toggle a dropdown menu.</p><p>You need to follow the Bootstrap markup for dropdown menus, and then you can just add our custom attributes on top of that. Because of this you have complete control over the styling and we just take care of toggling the menu.</p><h3>aubs-dropdown</h3><p>This custom attribute belongs to the wrapper of the dropdown, in Bootstrap 3 this would be the div with the <code>dropdown</code> class. It has several settings:</p><ul><li><code>is-open</code><property></property><boolean property.bind="true"></boolean><two-way></two-way><i>(default: false)</i>: Indicates whether or not the dropdown menu is visible. You can use this property to programmatically toggle the dropdown menu.</li><li><code>auto-close</code><string></string><i>(default: always)</i>: This setting allow you to control what actions cause the dropdown menu to close. By default the dropdown menu will always close when the <code>aubs-dropdown-toggle</code> element is clicked. On top of that we have the following options:<ul><li><code>outside</code>: The dropdown menu is closed when anything outside the menu itself is clicked.</li><li><code>always</code>: The dropdown menu is closed whenever anything is clicked, including a menu item.</li><li><code>disabled</code>: The dropdown can only be closed clicking the <code>aubs-dropdown-toggle</code> element.</li></ul></li><li><code>on-toggle</code><function></function>: Callback function called when the dropdown is toggled. It will receive a <code>open</code> parameter which is <code>true</code> if it the menu is open or <code>false</code> otherwise.</li></ul><h3>aubs-dropdown-toggle</h3><p>Add this Custom Attribute to the element that will function as the trigger in the dropdown group. Normally this would be a button or a link. This Custom Attribute must be inside the <code>aubs-dropdown</code> Element.</p></div><div class="col-xs-12"><hr><aubs-tabset><aubs-tab header="HTML"><pre><code class="language-markup" au-syntax>&lt;template>\n    &lt;div class="btn-group">\n        &lt;a class="btn btn-default" aubs-btn-radio="model.bind: autoClose; value: always">Always&lt;/a>\n        &lt;a class="btn btn-default" aubs-btn-radio="model.bind: autoClose; value: outside">Outside&lt;/a>\n        &lt;a class="btn btn-default" aubs-btn-radio="model.bind: autoClose; value: disabled">Disabled&lt;/a>\n    &lt;/div>\n\n    &lt;br/>&lt;br/>\n\n    &lt;div class="btn-group dropdown" aubs-dropdown="auto-close.bind: autoClose; on-toggle.call: toggled(state)">\n        &lt;button class="btn btn-primary dropdown-toggle" aubs-dropdown-toggle>\n            Dropdown trigger\n            &lt;span class="caret">&lt;/span>\n        &lt;/button>\n        &lt;ul class="dropdown-menu dropdown-menu-left">\n            &lt;li>&lt;a class="dropdown-item" href="javascript:void(0)">First Action&lt;/a>&lt;/li>\n            &lt;li>&lt;a class="dropdown-item" href="javascript:void(0)">Second Action&lt;/a>&lt;/li>\n            &lt;li>&lt;a class="dropdown-item" href="javascript:void(0)">Third Action&lt;/a>&lt;/li>\n            &lt;li class="divider">&lt;/li>\n            &lt;li>&lt;a class="dropdown-item" href="javascript:void(0)">Separated Action&lt;/a>&lt;/li>\n        &lt;/ul>\n    &lt;/div>\n&lt;/template></code></pre></aubs-tab><aubs-tab header="JS"><pre><code class="language-js" au-syntax>export class Example {\n    autoClose = \'disabled\';\n\n\n}</code></pre></aubs-tab></aubs-tabset></div></div></div></template>'})}(),System.register("dropdown/dropdown.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("Dropdown",d=function(){function a(){c(this,a),this.autoClose="always"}return a.prototype.toggled=function(a){console.log("Toggled: "+a)},a}()),a("Dropdown",d)}}}),function(){var a=System.amdDefine;a("introduction/introduction.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><div class="page-banner"><h1 class="project-name">Aurelia Bootstrap</h1><h2 class="project-tagline">Bootstrap components written in Aurelia</h2><a href="https://github.com/tochoromero/aurelia-bootstrap" class="btn">View on GitHub</a> <a href="https://github.com/tochoromero/aurelia-bootstrap/zipball/master" class="btn">Download .zip</a> <a href="https://github.com/tochoromero/aurelia-bootstrap/tarball/master" class="btn">Download .tar.gz</a></div><div class="container-fluid"><div class="row" id="introduction"><div class="col-md-12"><div class="page-header"><a class="btn btn-default pull-right" target="_blank" href="https://github.com/tochoromero/aurelia-bootstrap/tree/master/doc/src/introduction"><i class="fa fa-edit"></i> Improve documentation</a><h1>Introduction</h1></div><p>Aurelia Bootstrap is a collection of Custom Elements and Custom Attributes that facilitate working with Bootstrap on a native Aurelia way.</p><p>It has no dependency on jQuery, all the Javascript code has been written for Aurelia. Our only dependency is Velocity for animations.</p><div class="page-header" id="installation"><h1>Installation</h1></div><p>You can install the plugin directly from its Github repository with jspm:<pre>jspm install aurelia-bootstrap -y</pre></p><p>Once the plugin is installed we need to indicate Aurelia to use it. To do this find your <code>main.js</code> file and add the plugin:<pre><code class="language-js" au-syntax>export function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .developmentLogging()\n    .plugin(\'aurelia-bootstrap\');\n\n  aurelia.start().then(() => aurelia.setRoot());\n}</code></pre></p><p>You will also need to include the Bootstrap css file. We decided to do not include that css with our plugin, so you can choose where you want to get it from, or you may even want to compile your own version.</p><p>The simplest way to get it is through your Package Management, for JSPM that would be:<pre>jspm install bootstrap -y</pre></p><p>Once you have installed the Bootstrap css with your preferred method you only need to include the bootstrap.css file, there is no need to include the fonts (which have been dropped on v4), or the javascript files. This is as simple as adding the following to your <code>app.html</code>:</p><pre>&lt;require from="bootstrap/css/bootstrap.css">&lt;/require></pre><p>And with this you are ready to start using the plugin.</p><div class="page-header"><h1>Bootstrap Version</h1></div><p>Right now Bootstrap is in the middle of updating to v4, we have planned support for Bootstrap 4, and in fact it is already in the codebase. We plan to support both Bootstrap version for the foreseeable future, but for now Bootstrap 3 is the default version. If you wish to switch to Bootstrap 4 you need the following in your <code>main.js</code>:</p><pre><code class="language-js" au-syntax>export function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .developmentLogging()\n    .plugin(\'aurelia-bootstrap\', config => config.options.version = 4);\n\n  aurelia.start().then(() => aurelia.setRoot());\n}</code></pre></div></div></div></template>'})}(),System.register("introduction/introduction.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("Introduction",d=function a(){c(this,a)}),a("Introduction",d)}}}),System.register("main.js",["fetch"],function(a,b){"use strict";function c(a){a.use.standardConfiguration().developmentLogging().plugin("aurelia-syntax-highlighter").plugin("aurelia-bootstrap").feature("resources"),a.start().then(function(){return a.setRoot()})}return a("configure",c),{setters:[function(a){}],execute:function(){}}}),function(){var a=System.amdDefine;a("nav-bar.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template bindable="router"><nav class="navbar navbar-default navbar-fixed-top" role="navigation"><div class="navbar-header"><a class="navbar-brand" href="#"><span>Aurelia Bootstrap</span></a></div><ul class="nav navbar-nav"><li><a href="#/introduction">Getting Started</a></li><li class="dropdown" aubs-dropdown><a href="javascript:void(0)" class="dropdown-toggle" aubs-dropdown-toggle>Components <span class="caret"></span></a><ul class="dropdown-menu"><li repeat.for="row of router.navigation" class="${row.isActive ? \'active\' : \'\'}"><a class="dropdown-item" href.bind="row.href">${row.title}</a></li></ul></li></ul></nav></template>'})}(),function(){var a=System.amdDefine;a("popover/popover.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><div class="container-fluid"><div class="page-header"><a class="btn btn-default pull-right" target="_blank" href="https://github.com/tochoromero/aurelia-bootstrap/tree/master/doc/src/popover"><i class="fa fa-edit"></i> Improve documentation</a><h1>Popover</h1></div><div class="row"><div class="col-sm-6 col-xs-12"><div class="row"><div class="col-md-6"><div class="form-group"><label>Position:</label><select class="form-control" value.bind="position"><option value="top">Top</option><option value="bottom">Bottom</option><option value="left">Left</option><option value="right">Right</option></select></div><div class="form-group"><label>Trigger:</label><select class="form-control" value.bind="trigger"><option value="mouseover">Mouseover</option><option value="focus">Focus</option><option value="click">Click</option><option value="outsideClick">Outside click</option><option value="none">None</option></select></div></div><div class="col-md-6"><button class="btn btn-default" aubs-popover="title:My Title <i class=\'fa fa-heart\'></i>;\n                                                                    body:<a href=\'#/popover\'>Awesome</a> <strong>Content</strong>;\n                                                                    position.bind: position;\n                                                                    trigger.bind: trigger;\n                                                                    on-toggle.call:toggled(open)">Basic Popover</button><br><br><button class="btn btn-primary" aubs-popover="custom-popover.bind: customPopover;\n                                                                    position.bind: position;\n                                                                    trigger.bind: trigger;\n                                                                    is-open.bind:isOpen;">Custom Popover</button><div ref="customPopover"><h3 class="popover-title">Enter Password <i class="fa fa-lock"></i></h3><div class="popover-content"><div class="form-group"><input type="password" class="form-control" placeholder="Password"></div><button class="btn btn-default" click.delegate="isOpen = false">Unlock</button></div></div></div></div></div><div class="col-sm-6 col-xs-12"><p>The <code>aubs-popover</code> Custom Attribute allows you to easily create Popover. It is flexible enough to allow you to create complex popovers with custom content.</p><h3>aubs-popover</h3><p>The <code>aubs-popover</code> custom attribute has many settings. Because of this we will break them up on different sections:</p><h4>Popover Settings</h4><ul><li><code>position</code><string></string><i>(default: top)</i>: The position of the popover. The possible values are: <code>top</code>, <code>bottom</code>, <code>left</code> and <code>right</code>.</li><li><code>disabled</code><boolean></boolean><i>(default: false)</i>: Whether or not the popover is disabled.</li><li><code>is-open</code><property></property><boolean property.bind="true"></boolean><two-way></two-way><i>(default: false)</i>: Reflects the state of the popover. You can use this property to programmatically toggle the popover.</li><li><code>trigger</code><string></string><i>(default: mouseover)</i>: The event that triggers the popover. The options are:<ul><li><code>mouseover</code>: The popover will open when the mouse enters the Element, and it will be closed when the mouse leaves it.</li><li><code>focus</code>: The popover will open when the element gain focus. It will be closed when the focus is lost.</li><li><code>click</code>: The popover will toggle when the element is clicked.</li><li><code>outsideClick</code>: The popover will open when the element is clicked, and it will be closed with a click outside of the popover.</li><li><code>none</code>: The only way to toggle the popover will be with external control of the <code>is-open</code> property.</li></ul></li><li><code>on-toggle</code><function></function>: Callback function called when the popover is toggled. It will receive a <code>open</code> parameter which is <code>true</code> if it the popover is open or <code>false</code> otherwise.</li></ul><h4>Simple Popover</h4><p>If you only need a simple popover with none or very little HTML <strong>that doesn\'t need to be compiled</strong> you can use the following settings:</p><ul><li><code>title</code><string></string><markup></markup>: The popover title. It is not necessary to provide one.</li><li><code>body</code><string></string><markup></markup>: The popover text body.</li></ul><h4>Custom Popover</h4><p>If you require a popover with complex content or you need access to your view model you can use a custom popover.</p><ul><li><code>custom-popover</code><ref></ref>: Specifies the DOM element to use as the popover. The DOM element will keep the right view-model context.</li></ul><p>Your DOM element needs to look something like this:<pre><code class="language-markup" au-syntax>&lt;div ref="customPopover">\n    &lt;h3 class="popover-title">My Title&lt;/h3>\n    &lt;div class="popover-content">My Content&lt;/div>\n&lt;/div></code></pre>Note how we have <code>ref="customPopover"</code>. This is the reference you need to provided in the <code>custom-popover</code> setting.</p></div><div class="col-xs-12"><hr><aubs-tabset><aubs-tab header="HTML"><pre><code class="language-markup" au-syntax>&lt;template>\n    &lt;div class="row">\n        &lt;div class="col-md-6">\n            &lt;div class="form-group">\n                &lt;label>Position:&lt;/label>\n                &lt;select class="form-control" value.bind="position">\n                    &lt;option value="top">Top&lt;/option>\n                    &lt;option value="bottom">Bottom&lt;/option>\n                    &lt;option value="left">Left&lt;/option>\n                    &lt;option value="right">Right&lt;/option>\n                &lt;/select>\n            &lt;/div>\n\n            &lt;div class="form-group">\n                &lt;label>Trigger:&lt;/label>\n                &lt;select class="form-control" value.bind="trigger">\n                    &lt;option value="mouseover">Mouseover&lt;/option>\n                    &lt;option value="focus">Focus&lt;/option>\n                    &lt;option value="click">Click&lt;/option>\n                    &lt;option value="outsideClick">Outside click&lt;/option>\n                    &lt;option value="none">None&lt;/option>\n                &lt;/select>\n            &lt;/div>\n        &lt;/div>\n\n        &lt;div class="col-md-6">\n\n            &lt;button class="btn btn-default" aubs-popover="title:My Title &lt;i class=\'fa fa-heart\'>&lt;/i>;\n                                                        body:&lt;a href=\'#/popover\'>Awesome&lt;/a> &lt;strong>Content&lt;/strong>;\n                                                        position.bind: position;\n                                                        trigger.bind: trigger;\n                                                        on-toggle.call:toggled(open)">\n                Basic Popover\n            &lt;/button>\n\n            &lt;br/> &lt;br/>\n\n            &lt;button class="btn btn-primary" aubs-popover="custom-popover.bind: customPopover;\n                                                        position.bind: position;\n                                                        trigger.bind: trigger;\n                                                        is-open.bind:isOpen;">\n                Custom Popover\n            &lt;/button>\n\n            &lt;div ref="customPopover">\n                &lt;h3 class="popover-title">\n                    Enter Password &lt;i class="fa fa-lock">&lt;/i>\n                &lt;/h3>\n\n                &lt;div class="popover-content">\n                    &lt;div class="form-group">\n                        &lt;input type="password" class="form-control" placeholder="Password">\n                    &lt;/div>\n\n                    &lt;button class="btn btn-default" click.delegate="isOpen = false"> Unlock&lt;/button>\n                &lt;/div>\n            &lt;/div>\n\n        &lt;/div>\n    &lt;/div>\n&lt;/template></code></pre></aubs-tab><aubs-tab header="JS"><pre><code class="language-js" au-syntax>export class Example {\n    position = \'top\';\n    trigger = \'mouseover\';\n\n    toggled(open) {\n        if (open) {\n            console.log(\'opened\');\n        } else {\n            console.log(\'closed\');\n        }\n    }\n}</code></pre></aubs-tab></aubs-tabset></div></div></div></template>';
})}(),System.register("popover/popover.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("Popover",d=function(){function a(){c(this,a),this.position="top",this.trigger="mouseover"}return a.prototype.toggled=function(a){a?console.log("opened"):console.log("closed")},a}()),a("Popover",d)}}}),System.register("resources/index.js",[],function(a,b){"use strict";function c(a){a.globalResources("./settings-type/property.html","./settings-type/boolean.html","./settings-type/two-way.html","./settings-type/string.html","./settings-type/markup.html","./settings-type/function.html","./settings-type/ref.html","./settings-type/number.html","./settings-type/any.html")}return a("configure",c),{setters:[],execute:function(){}}}),function(){var a=System.amdDefine;a("resources/settings-type/any.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:You can use any value. It can be literal or an object.">a</small> &nbsp;</template>'})}(),function(){var a=System.amdDefine;a("resources/settings-type/boolean.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:Expects a Boolean value.">b </small>&nbsp;</template>'})}(),function(){var a=System.amdDefine;a("resources/settings-type/function.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:Expects a function reference from your view-model. This function will be executed with the call command.">fn </small>&nbsp;</template>'})}(),function(){var a=System.amdDefine;a("resources/settings-type/markup.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:You can use html markup."><i class="fa fa-code"></i></small> &nbsp;</template>'})}(),function(){var a=System.amdDefine;a("resources/settings-type/number.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:Expects a number.">#</small> &nbsp;</template>'})}(),function(){var a=System.amdDefine;a("resources/settings-type/property.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:Expects a property from your view-model.">p</small>&nbsp;</template>'})}(),function(){var a=System.amdDefine;a("resources/settings-type/ref.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:Expects a reference to a DOM element. You create the references using the \'ref\' binding command.">ref </small>&nbsp;</template>'})}(),function(){var a=System.amdDefine;a("resources/settings-type/string.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:Expects a String value.">s</small> &nbsp;</template>'})}(),function(){var a=System.amdDefine;a("resources/settings-type/two-way.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><small class="badge" aubs-tooltip="text:This property has a two way data binding."><i class="fa fa-arrows-h"></i></small> &nbsp;</template>'})}(),function(){var a=System.amdDefine;a("tabs/tabs.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><div class="container-fluid"><div class="page-header"><a class="btn btn-default pull-right" target="_blank" href="https://github.com/tochoromero/aurelia-bootstrap/tree/master/doc/src/tabs"><i class="fa fa-edit"></i> Improve documentation</a><h1>Tabs</h1></div><div class="row"><div class="col-sm-6 col-xs-12"><p></p><div class="btn-group"><a class="btn btn-default" aubs-btn-radio="model.bind: type; value: tabs">Tabs</a> <a class="btn btn-default" aubs-btn-radio="model.bind: type; value: pills">Pills</a></div>&nbsp; <a class="btn btn-default" aubs-btn-checkbox="state.bind: vertical">Vertical Navigation</a> <a class="btn btn-default" aubs-btn-checkbox="state.bind: disabled">Disable Second Tab</a> <a class="btn btn-default" click.delegate="active=1">Select Second</a><p></p><aubs-tabset vertical.bind="vertical" type.bind="type" active.bind="active"><aubs-tab header="My first tab"><p>Raw denim you probably haven\'t heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor, williamsburg carles vegan helvetica. Reprehenderit butcher retro keffiyeh dreamcatcher synth. Cosby sweater eu banh mi, qui irure terry richardson ex squid. Aliquip placeat salvia cillum iphone. Seitan aliquip quis cardigan american apparel, butcher voluptate nisi qui.</p></aubs-tab><aubs-tab header="My second tab" disabled.bind="disabled">Food truck fixie locavore, accusamus mcsweeney\'s marfa nulla single-origin coffee squid. Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui photo booth letterpress, commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo nostrud organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr, vero magna velit sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit, sustainable jean shorts beard ut DIY ethical culpa terry richardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint qui sapiente accusamus tattooed echo park.</aubs-tab><aubs-tab on-select.call="selected(index)" on-deselect.call="deselected(index)" header="<i class=\'fa fa-warning\'></i> My Third tab">I log to the console on Select and Deselect.</aubs-tab></aubs-tabset></div><div class="col-sm-6 col-xs-12"><p>This Custom Elements allow you to organize your content in Tabs with little effort.</p><h3>aubs-tabset</h3><p>The <code>aubs-tabset</code> Custom Element is the wrapper for all the tabs. It has a couple of settings:</p><ul><li><code>active</code><property></property><number></number><two-way></two-way><i>(defualt: 0)</i>: Indicates the Tab that is currently selected. The Tabs have a 0 based index that correspond to the order you add them to the <code>aubs-tabset</code>. You can use this property to programmatically select one tab.</li><li><code>type</code><string></string><i>(default: tabs)</i>: Specify the navigation type. The possible values are \'tabs\' and \'pills\'.</li><li><code>vertical</code><boolean></boolean><i>(default: false)</i>: Whether the tabs should be vertically stacked.</li></ul><h3>aubs-tab</h3><p>The <code>aubs-tab</code> custom element represent one Tab. The Custom Element inner HTML will be used as the tab body.</p><ul><li><code>header</code><string></string><markup></markup>: The text for the Navigation Tab.</li><li><code>disabled</code><boolean></boolean><i>(default: false)</i>: Whether or not the Tab is disabled. A disabled Tab cannot be clicked. But you can still select it using the <code>active</code> property in the <code>aubs-tabset</code> Custom Element.</li><li><code>on-select</code><function></function>: Callback function called when the Tab is selected. It will receive the Tab <code>index</code> as a parameter.</li><li><code>on-deselect</code><function></function>: Callback function called when the Tab is deselected. It will receive the Tab <code>index</code> as a parameter.</li></ul></div><div class="col-xs-12"><hr><aubs-tabset><aubs-tab header="HTML"><pre><code class="language-markup" au-syntax>&lt;template>\n    &lt;div class="btn-group">\n        &lt;a class="btn btn-default" aubs-btn-radio="model.bind: type; value: tabs">Tabs&lt;/a>\n        &lt;a class="btn btn-default" aubs-btn-radio="model.bind: type; value: pills">Pills&lt;/a>\n    &lt;/div>\n    &nbsp;\n    &lt;a class="btn btn-default" aubs-btn-checkbox="state.bind: vertical">Vertical Navigation&lt;/a>\n    &lt;a class="btn btn-default" aubs-btn-checkbox="state.bind: disabled">Disable Second Tab&lt;/a>\n    &lt;a class="btn btn-default" click.delegate="active=1">Select Second&lt;/a>\n\n    &lt;aubs-tabset vertical.bind="vertical" type.bind="type" active.bind="active">\n        &lt;aubs-tab header="My first tab">\n            &lt;p>Raw denim you probably haven\'t heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth\n                master cleanse. Mustache cliche tempor, williamsburg carles vegan helvetica. Reprehenderit butcher retro\n                keffiyeh dreamcatcher synth. Cosby sweater eu banh mi, qui irure terry richardson ex squid. Aliquip placeat\n                salvia cillum iphone. Seitan aliquip quis cardigan american apparel, butcher voluptate nisi qui.&lt;/p>\n        &lt;/aubs-tab>\n\n        &lt;aubs-tab header="My second tab" disabled.bind="disabled">\n            Food truck fixie locavore, accusamus mcsweeney\'s marfa nulla single-origin coffee squid. Exercitation +1 labore\n            velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee. Qui\n            photo booth letterpress, commodo enim craft beer mlkshk aliquip jean shorts ullamco ad vinyl cillum PBR. Homo\n            nostrud organic, assumenda labore aesthetic magna delectus mollit. Keytar helvetica VHS salvia yr, vero magna velit\n            sapiente labore stumptown. Vegan fanny pack odio cillum wes anderson 8-bit, sustainable jean shorts beard ut DIY\n            ethical culpa terry richardson biodiesel. Art party scenester stumptown, tumblr butcher vero sint qui sapiente\n            accusamus tattooed echo park.\n        &lt;/aubs-tab>\n\n        &lt;aubs-tab on-select.call="selected(index)" on-deselect.call="deselected(index)" header="&lt;i class=\'fa fa-warning\'>&lt;/i> My Third tab">\n            I log to the console on Select and Deselect.\n        &lt;/aubs-tab>\n    &lt;/aubs-tabset>    \n&lt;/template></code></pre></aubs-tab><aubs-tab header="JS"><pre><code class="language-js" au-syntax>export class Example {\n    disabled = false;\n    vertical = false;\n    type = \'tabs\';\n    active = 2;\n\n    selected(index){\n        console.log(\'Selected \' + index);\n    }\n\n    deselected(index){\n        console.log(\'Deselected \' + index)\n    }\n}</code></pre></aubs-tab></aubs-tabset></div></div></div></template>'})}(),System.register("tabs/tabs.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("Tabs",d=function(){function a(){c(this,a),this.disabled=!1,this.vertical=!1,this.type="tabs",this.active=2}return a.prototype.selected=function(a){console.log("Selected "+a)},a.prototype.deselected=function(a){console.log("Deselected "+a)},a}()),a("Tabs",d)}}}),function(){var a=System.amdDefine;a("tooltip/tooltip.html!github:systemjs/plugin-text@0.0.8.js",[],function(){return'<template><div class="container-fluid"><div class="page-header"><a class="btn btn-default pull-right" target="_blank" href="https://github.com/tochoromero/aurelia-bootstrap/tree/master/doc/src/tooltip"><i class="fa fa-edit"></i> Improve documentation</a><h1>Tooltip</h1></div><div class="row"><div class="col-sm-6 col-xs-12"><div class="row"><div class="col-md-6"><div class="form-group"><label>Position:</label><select class="form-control" value.bind="position"><option value="top">Top</option><option value="bottom">Bottom</option><option value="left">Left</option><option value="right">Right</option></select></div><div class="form-group"><label>Trigger:</label><select class="form-control" value.bind="trigger"><option value="mouseover">Mouseover</option><option value="focus">Focus</option><option value="click">Click</option><option value="outsideClick">Outside click</option><option value="none">None</option></select></div><div class="form-group"><label>Text:</label><input type="text" class="form-control" value.bind="text"></div></div><div class="col-md-6"><button class="btn btn-default" aubs-tooltip="text.bind: text;\n                                                                    position.bind: position;\n                                                                    trigger.bind: trigger">Dynamic Tooltip</button><p>I\'m a paragraph with a <strong aubs-tooltip="text:Simple tooltip">Tooltip</strong></p></div></div></div><div class="col-sm-6 col-xs-12"><p>The <code>aubs-tooltip</code> Custom Attribute allows you to add tooltips to your elements. It is very easy and configure to adapt to your needs.</p><h3>aubs-tooltip</h3><ul><li><code>text</code><string></string><markup></markup>: The text for the tooltip.</li><li><code>position</code><string></string><i>(default: top)</i>: The position of the tooltip. The possible values are: <code>top</code>, <code>bottom</code>, <code>left</code> and <code>right</code>.</li><li><code>disabled</code><boolean></boolean><i>(default: false)</i>: Whether or not the tooltip is disabled.</li><li><code>is-open</code><property></property><boolean property.bind="true"></boolean><two-way></two-way><i>(default: false)</i>: Reflects the state of the tooltip. You can use this property to programmatically toggle the tooltip.</li><li><code>trigger</code><string></string><i>(default: mouseover)</i>: The event that triggers the tooltip. The options are:<ul><li><code>mouseover</code>: The tooltip will open when the mouse enters the Element, and it will be closed when the mouse leaves it.</li><li><code>focus</code>: The tooltip will open when the element gain focus. It will be closed when the focus is lost.</li><li><code>click</code>: The tooltip will toggle when the element is clicked.</li><li><code>outsideClick</code>: The tooltip will open when the element is clicked, and it will be closed with a click outside of the popover.</li><li><code>none</code>: The only way to toggle the tooltip will be with external control of the <code>is-open</code> property.</li></ul></li></ul></div><div class="col-xs-12"><hr><aubs-tabset><aubs-tab header="HTML"><pre><code class="language-markup" au-syntax>&lt;template>\n    &lt;div class="row">\n        &lt;div class="col-md-6">\n            &lt;div class="form-group">\n                &lt;label>Position:&lt;/label>\n                &lt;select class="form-control" value.bind="position">\n                    &lt;option value="top">Top&lt;/option>\n                    &lt;option value="bottom">Bottom&lt;/option>\n                    &lt;option value="left">Left&lt;/option>\n                    &lt;option value="right">Right&lt;/option>\n                &lt;/select>\n            &lt;/div>\n    \n            &lt;div class="form-group">\n                &lt;label>Trigger:&lt;/label>\n                &lt;select class="form-control" value.bind="trigger">\n                    &lt;option value="mouseover">Mouseover&lt;/option>\n                    &lt;option value="focus">Focus&lt;/option>\n                    &lt;option value="click">Click&lt;/option>\n                    &lt;option value="outsideClick">Outside click&lt;/option>\n                    &lt;option value="none">None&lt;/option>\n                &lt;/select>\n            &lt;/div>\n    \n            &lt;div class="form-group">\n                &lt;label>Text:&lt;/label>\n                &lt;input type="text" class="form-control" value.bind="text"/>\n            &lt;/div>\n        &lt;/div>\n    \n        &lt;div class="col-md-6">\n    \n            &lt;button class="btn btn-default" aubs-tooltip="text.bind: text;\n                                                        position.bind: position;\n                                                        trigger.bind: trigger">\n                Dynamic Tooltip\n            &lt;/button>\n    \n            &lt;p>I\'m a paragraph with a &lt;strong aubs-tooltip="text:Simple tooltip">Tooltip&lt;/strong>&lt;/p>\n        &lt;/div>\n    &lt;/div>\n&lt;/template></code></pre></aubs-tab><aubs-tab header="JS"><pre><code class="language-js" au-syntax>export class Example {\n    position = \'top\';\n    trigger = \'mouseover\';\n    text = \'Dynamic Tooltip <i class="fa fa-heart"></i>\'\n}</code></pre></aubs-tab></aubs-tabset></div></div></div></template>'})}(),System.register("tooltip/tooltip.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("Tooltip",d=function a(){c(this,a),this.position="top",this.trigger="mouseover",this.text='Dynamic Tooltip <i class="fa fa-heart"></i>'}),a("Tooltip",d)}}});